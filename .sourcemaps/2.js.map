{"version":3,"sources":["../../src/pages/registration/registration.module.ts","../../src/pages/registration/registration.ts"],"names":[],"mappings":"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","file":"2.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { RegistrationPage } from './registration';\n\n@NgModule({\n  declarations: [\n    RegistrationPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(RegistrationPage),\n  ],\n})\nexport class RegistrationPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/registration/registration.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ViewController, AlertController, LoadingController } from 'ionic-angular';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { RegisterServiceProvider } from '../../providers/register/register-service';\n\n@IonicPage({\n  name: 'registration'\n})\n\n@Component({\n  selector: 'page-register',\n  templateUrl: 'registration.html',\n  providers:[ RegisterServiceProvider ]\n})\nexport class RegistrationPage {\n\n  // Form groups will automate any data and validation in our forms\n  private registerGroup: FormGroup;\n\n  // The submit attempt for the user will start off as false,\n  // and we'll switch it on button press.\n  private submitAttempt: boolean = false;\n\n  constructor(\n    public alertCtrl: AlertController,\n    public formBuilder: FormBuilder,\n    public loadCtrl: LoadingController,\n    public navCtrl: NavController, \n    public navParams: NavParams,\n    public viewCtrl: ViewController,\n    private registerService: RegisterServiceProvider) \n    {\n       // this command will set up the form validation.\n       this.registerGroup = this.formBuilder.group({\n        // the email is required\n        email: ['', Validators.required],\n        // the password is required\n        password: ['', Validators.required],\n        // name is required\n        name: ['', Validators.required],\n        // surname is required\n        surname: ['', Validators.required]\n      });\n    }\n\n  public registerUser(): void \n  {\n    // first,  make a submit attempt.\n    this.submitAttempt = true;\n\n    // if the form doesn't validate, stop the function\n    if (!this.registerGroup.valid)\n    {\n      return;\n    }\n\n    // Create and show a leading interface\n    const loader = this.loadCtrl.create({\n      content: 'Registering User...'\n    });\n    loader.present();\n\n    this.registerService.registerUser(this.registerGroup.value).subscribe(\n      // We are successful\n      data => {\n        loader.dismiss();\n        this.navCtrl.setRoot('login', {}, {animate: true});\n      },\n\n      // We have an error, handle it.\n      error => {\n        loader.dismiss();\n\n        const alert = this.alertCtrl.create({\n          title: 'Cannot Register',\n          subTitle: error.message,\n          buttons: ['OK']\n        });\n        alert.present();\n      }\n    );\n  }\n\n  cancel(){\n    this.viewCtrl.dismiss();\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/registration/registration.ts"],"sourceRoot":""}